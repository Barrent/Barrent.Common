# For more information on GitHub Actions, refer to https://github.com/features/actions
# For a complete CI/CD sample to get started with GitHub Action workflows for Desktop Applications,
# refer to https://github.com/microsoft/github-actions-for-desktop-apps
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
# https://www.meziantou.net/publishing-a-nuget-package-following-best-practices-using-github.htm

name: Publish

on:
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI

env:
  NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  PACKAGE_OUTPUT: ${{github.workspace}}\output 

jobs:

  deploy:
    name: 'Publish'

    runs-on: windows-latest

    permissions:
        contents: write

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 'Install GitVersion'
      uses: gittools/actions/gitversion/setup@v0
      with:
        preferLatestVersion: true

    - name: 'Determine Version'
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0

    - name: 'Display GitVersion'
      run: |
          echo "MajorMinorPatch: ${{ env.majorMinorPatch }}"
          echo "CommitsSinceVersionSource: ${{ env.commitsSinceVersionSource }}"

    - name: 'Add tag'
      if: 'env.commitsSinceVersionSource != 0' 
      run: |
        git tag v${{ env.majorMinorPatch }}
        git push origin v${{ env.majorMinorPatch }}

    - name: 'Setup .NET'
      uses: actions/setup-dotnet@v4      

    - name: 'Restore packages'
      run: dotnet restore

    # - name: 'Build'
    #   run: dotnet build --no-restore --configuration Release -p:Version=1.0.0.5 -p:FileVersion=1.0.0.5 -p:AssemblyVersion=1.0.0.5

    # - name: 'Pack'
    #   run: dotnet pack --no-build --configuration Release --output ${{env.PACKAGE_OUTPUT}}

    # - name: 'Publish'
    #   run: dotnet nuget push ${{env.PACKAGE_OUTPUT}}\*.nupkg

